---
stages:
  - create-image-1
  - create-image-2
  - benchmarking

build-push-development-test-image:
  stage: create-image-1
  only:
    refs:
      - master
  tags:
    - shell-exec-required
  except:
    - schedules
  script:
    - docker build -f DevelopmentTest.Dockerfile --tag $ARTIFACTORY_HOST/$ARTIFACTORY_NAMESPACE_1/$ARTIFACTORY_NAMESPACE_2:development-test --build-arg cert="$(cat $MITRE_CERT_PATH)" .
    - docker push $ARTIFACTORY_HOST/$ARTIFACTORY_NAMESPACE_1/$ARTIFACTORY_NAMESPACE_2:development-test
  allow_failure: true

build-push-staging-image:
  stage: create-image-1
  tags:
    - shell-exec-required
  only:
    refs:
      - master
  except:
    - schedules
  script:
    - docker build -f Production.Dockerfile --tag $ARTIFACTORY_HOST/$ARTIFACTORY_NAMESPACE_1/$ARTIFACTORY_NAMESPACE_2:latest --build-arg cert="$(cat $MITRE_CERT_PATH)" .
    - docker push $ARTIFACTORY_HOST/$ARTIFACTORY_NAMESPACE_1/$ARTIFACTORY_NAMESPACE_2:latest
  allow_failure: false

build-push-staging-nginx-image:
  stage: create-image-2
  tags:
    - shell-exec-required
  only:
    refs:
      - master
  except:
    - schedules
  script:
    - docker build -f Nginx.Dockerfile --tag $ARTIFACTORY_HOST/$ARTIFACTORY_NAMESPACE_1/$ARTIFACTORY_NAMESPACE_3:latest --build-arg sara_alert_image="$ARTIFACTORY_HOST/$ARTIFACTORY_NAMESPACE_1/$ARTIFACTORY_NAMESPACE_2:latest" .
    - docker push $ARTIFACTORY_HOST/$ARTIFACTORY_NAMESPACE_1/$ARTIFACTORY_NAMESPACE_3:latest
  allow_failure: false


jmeter-benchmark:
  stage: benchmarking
  artifacts:
    paths:
      - jmeter.jtl
    expire_in: 1 week
    when: always
  tags:
    - sara-perf-shell
  except:
    - schedules
  cache:
    policy: pull-push
    paths:
      - public/assets/
      - public/packs/
      - public/packs-test/
      - node_modules/
  script:
    - bundle install
    - yarn install
    - bundle exec rails assets:precompile
    # Expect around 25 minutes to populate a new DB
    - rails db:migrate || (mysql --user=disease_trakker -e 'CREATE DATABASE IF NOT EXISTS disease_trakker_development;'; bundle exec rails db:drop; bundle exec rails db:create; mysql --user=disease_trakker disease_trakker_development < /home/gitlab-runner/sara_database_1607023723.sql; bundle exec rails db:migrate)
    - ./script/run_jmeter_tests.sh

send-assessments-job-benchmark:
  stage: benchmarking
  artifacts:
    paths:
      - script/benchmarks/output/SendAssessmentsJob_*
    expire_in: 1 week
    when: always
  tags:
    - sara-perf-shell
  except:
    - schedules
  only:
    - master
    - /^[0-9]{1,}(\.[0-9]{1,})+$/
    - $SEND_ASSESSMENT_BMK != null
    - SA-1192/perfTestFixed
  variables:
    CAP_STDOUT: "true"
    NO_MEMPROF: "true"
  script:
    - bundle install
    # Expect around 25 minutes to populate a new DB
    - rails db:migrate || (mysql --user=disease_trakker -e 'CREATE DATABASE IF NOT EXISTS disease_trakker_development;'; bundle exec rails db:drop; bundle exec rails db:create; mysql --user=disease_trakker disease_trakker_development < /home/gitlab-runner/sara_database_1607023723.sql; bundle exec rails db:migrate)
    - ruby ./script/benchmarks/send_assessments_job_benchmark.rb

close-patients-job-benchmark:
  stage: benchmarking
  artifacts:
    paths:
      - script/benchmarks/output/ClosePatientsJob_*
    expire_in: 1 week
    when: always
  tags:
    - sara-perf-shell
  except:
    - schedules
  only:
    - master
    - /^[0-9]{1,}(\.[0-9]{1,})+$/
    - $SEND_ASSESSMENT_BMK != null
    - SA-1192/perfTestFixed
  variables:
    CAP_STDOUT: "true"
    NO_MEMPROF: "true"
  script:
    - bundle install
    # Expect around 25 minutes to populate a new DB
    - rails db:migrate || (mysql --user=disease_trakker -e 'CREATE DATABASE IF NOT EXISTS disease_trakker_development;'; bundle exec rails db:drop; bundle exec rails db:create; mysql --user=disease_trakker disease_trakker_development < /home/gitlab-runner/sara_database_1607023723.sql; bundle exec rails db:migrate)
    - ruby ./script/benchmarks/close_patients_job_benchmark.rb
