worker_processes auto;
worker_cpu_affinity auto;

events {

}

http {
  server {
    root   /var/www/saraalert/public;

    access_log /var/www/saraalert/log/nginx.access.log;
    error_log /var/www/saraalert/log/nginx.error.log;

    add_header X-Content-Type-Options nosniff;

    location ~ ^/assets/ {
      try_files $uri @rails;
      access_log off;
      gzip_static on;
      expires max;
      add_header Cache-Control public;
      # Some browsers still send conditional-GET requests if there's a
      # Last-Modified header or an ETag header even if they haven't
      # reached the expiry date sent in the Expires header.
      add_header Last-Modified "";
      add_header ETag "";
      break;
    }
  }

  server {
    listen 443 ssl;
    listen [::]:443;

    server_tokens off;

    server_name _;

    ssl_certificate      /etc/nginx/puma.crt;
    ssl_certificate_key  /etc/nginx/puma.key;
    ssl_session_cache    shared:SSL:1m;
    ssl_protocols TLSv1.2 TLSv1.3;

    if ($request_method !~ ^(GET|POST|PUT|DELETE|OPTIONS|PATCH)$) {
      return 405;
    }

    add_header X-Content-Type-Options nosniff;

    location / {
      proxy_pass        http://sara-alert-enrollment:3000;
      proxy_set_header  Host $host;
      proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header  X-Forwarded-Proto $scheme;
      proxy_set_header  X-Forwarded-Ssl on;
      proxy_set_header  X-Forwarded-Port $server_port;
      proxy_set_header  X-Forwarded-Host $host;
    }

    location /report {
      proxy_pass        http://sara-alert-assessment:3000/;
      proxy_set_header  Host $host;
      proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header  X-Forwarded-Proto $scheme;
      proxy_set_header  X-Forwarded-Ssl on;
      proxy_set_header  X-Forwarded-Port $server_port;
      proxy_set_header  X-Forwarded-Host $host;
    }

    location /r/ {
      proxy_pass        http://sara-alert-assessment:3000;
      proxy_set_header  Host $host;
      proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header  X-Forwarded-Proto $scheme;
      proxy_set_header  X-Forwarded-Ssl on;
      proxy_set_header  X-Forwarded-Port $server_port;
      proxy_set_header  X-Forwarded-Host $host;
    }

    location /fhir {
      proxy_pass        http://sara-alert-api:3000;
      proxy_set_header  Host $host;
      proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header  X-Forwarded-Proto $scheme;
      proxy_set_header  X-Forwarded-Ssl on;
      proxy_set_header  X-Forwarded-Port $server_port;
      proxy_set_header  X-Forwarded-Host $host;
    }

    location /oauth {
      proxy_pass        http://sara-alert-api:3000;
      proxy_set_header  Host $host;
      proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header  X-Forwarded-Proto $scheme;
      proxy_set_header  X-Forwarded-Ssl on;
      proxy_set_header  X-Forwarded-Port $server_port;
      proxy_set_header  X-Forwarded-Host $host;
    }
  }

  server {
    listen 80;
    listen [::]:80;

    server_name _;

    return 301 https://$host$request_uri;
  }
}
